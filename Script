{(hd == 'UHD'? "Z:\\My Media\\Peliculas 4k\\":"Z:\\My Media\\Alpha\\" )}
{az}/
{ny} { " {tmdb-$tmdbid}" }/{ny} [tmdbid-{tmdbid}] - 
{
	(hd == 'SD') ? {any{text.size()}{0} > 0 ? '[SD]':'[SD]'} :
    	(hd == 'UHD') ? ( ((bytes/1073741824).round(1) > 30 && bitrate >= 26000000 ? '[4K]' : {any{text.size()}{0} > 0 ? '[4K]':'[4K]'})) :
    	(hd == 'HD' && vf == '720p') ? '[720p]' :
    	(hd == 'HD' && vf == '[1080p' ? 
            ((bytes/1073741824).round(1) > 15 && bitrate >= 18000000) ? '[1080p]' : 
            (bitrate > 8000000) ? {any{text.size()}{0} > 0 ? '[1080p]':'[1080p]'} : {any{text.size()}{0} > 0 ? '[1080p]':'[1080p]'} :
            {any{text.size()}{0} > 0 ? '[1080p]':'[1080p]'} )
	
}
 [{ import java.math.RoundingMode
  import net.filebot.Language
  audio.collect {
    def au = it
    def channels = any{ au['ChannelPositions/String2'] }{ au['Channel(s)_Original'] }{ au['Channel(s)'] } 
    def ch = channels.tokenize('\\/')*.toDouble().inject(0, { a, b -> a + b }).findAll { it > 0 }
                     .max().toBigDecimal().setScale(1, RoundingMode.HALF_UP).toString()
    def codec = any{ au['CodecID/Hint'] }{ au['Format'] }.replaceAll(/['`´‘’ʻ\p{Punct}\p{Space}]/, '')
    return [ch, Language.findLanguage(au['Language']).ISO3.upperInitial()]
  }*.join(" ").join(", ") }] {(fps >= 60)? '[60 fps]' : '' } [{mbps}]
